
public class Prozessor extends Thread{

	
	public void Befehlsabarbeitung(int[] befehlDezimalIntArray) {
		System.out.println(befehlDezimalIntArray[0] );
		int zeileInt = befehlDezimalIntArray[0];
		int precomandInt = (zeileInt >> 12) &0x0003;
		int commandInt = (zeileInt >> 8) &0x000F;
		int payloadInt = (zeileInt ) &0x00FF;
		
		if(precomandInt == 0)
		{
			int d = payloadInt >> 7;
			int f = payloadInt & 0b01111111 ;
			
			switch(commandInt)
			{
			case 0b0111:
				addwf(d,f);
				break;
			case 0b0101:
				andwf(d,f);
				break;
			case 0b0001;
				clrf(f);
				break;
			case 0b0001; //????
				clrw();
				break;
			case 0b1001
				comf(d,f);
				break;
			case 0b0011:
				decf(d,f);
				break;
			case 0b1011:
				decfsz(d,f);
				break;
			case 0b1010:
				incf(d,f);
				break;
			case 0b1111:
				incfsz(d,f);
				break;
			case 0b0100:
				iorwf(d,f);
				break;
			case 0b1000:
				movf(d,f);
				break;
			case 0b0000:
				movwf(f);
				break;
			case 0b0000:
				nop();	//unterscheidung über LSB
				break;
			case 0b1101:
				rlf(d,f);
				break;
			case 0b1100:
				rrf(d,f);
				break;
			case 0b0010:
				subwf(d,f);
				break;
			case 0b1110:
				swapf(d,f);
				break;
			case 0b0110:
				xorwf(d,f);
				break;
			}
		}
		
	}
	
	private void addwf(int d,int f)
	{
		
	}
}

